import { type NextPage } from "next";
import Head from "next/head";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { Field, Form, Formik, FormikHelpers } from 'formik'
import Base from "../layouts/Base";
import { useRouter } from "next/router";
import Loading from "../components/Loading";

interface Values {
  email: string;
  password: string;
}

const api = "http://localhost:4000/api"

const Login: NextPage = () => {
  const router = useRouter();
  const auth = useQuery(["me"], () =>
    fetch(api + '/users/me', {
      mode: 'cors',
      credentials: 'include',
      headers: {
        'Content-Type': 'application/json'
      },
    }).then(res => res.json()), {
    enabled: true,
    retry: false,
    cacheTime: 0,
    staleTime: 0,
  }
  )
  const login = useMutation(["login"], (values: Values) =>
    fetch(api + '/users/login', {
      method: 'POST',
      mode: 'cors',
      credentials: 'include',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(values)
    }
    ).then(res => res.json()), {
    onSuccess: (response) => {
      console.log(response)
      auth.refetch()
      router.push("/")
    },
  }
  )

  function verifyAuth() {
    auth.refetch()
  }

  async function logout() {
    const response = await fetch(api + '/users/logout', {
      method: 'DELETE',
      mode: 'cors',
      credentials: 'include',
      headers: {
        'Content-Type': 'application/json'
      },
    }
    ).then(res => res.json())

    auth.refetch()

    console.log(response)
  }

  if (auth.isLoading) return <Loading />


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Base>
        <h1 className="font-bold text-2xl">Log in</h1>
        {
          auth.data.user
            ? (
              <button onClick={logout}>Logout</button>
            )
            : (
              <>
                <Formik
                  initialValues={{ email: '', password: '' }}
                  onSubmit={(
                    values: Values,
                    { setSubmitting }: FormikHelpers<Values>
                  ) => {
                    setTimeout(() => {
                      login.mutate(values)
                      setSubmitting(false)
                    }, 500)
                  }}
                >
                  <Form className="flex items-center flex-col gap-4 p-5">
                    <label className="font-bold text-xl" htmlFor="email">Email</label>
                    <Field type="email" id="email" name="email" placeholder="john@doe.com" />
                    <label className="font-bold text-xl" htmlFor="password">Password</label>
                    <Field id="password" name="password" placeholder="******" />
                    <button type="submit">Submit</button>
                  </Form>
                </Formik>
              </>
            )
        }

        {JSON.stringify(auth.data, null, 2)}
      </Base>
    </>
  );
};

export default Login;
